h2. cobagi

config backups using git(hub)

Backup your system settings and scripts in an easy an convenient way on github.com

h3. Introduction

Use your brain! Don't push sensitive data (passwords, keys, etc.) to github and you'll be happy[1]. Also use your own account information for setup[2].

* Operating system: "Gentoo Linux":http://www.gentoo.org/
* Hardware: "IBM ThinkPad R40 (2722-DG1)":http://www.thinkwiki.org/wiki/2722-DG1

h3. Create Github repository

"Create repository":https://github.com/repositories/new

h3. Local setup

Download and install "Git":http://git-scm.com/download

h4. Configure login

  $ git config --global user.email "your@example.com"
  $ git config --global user.name "Inte"

h4. Initialise repo

  $ su - 
  $ cd /
  $ git init
     
h4. Disable global tracking

  $ echo -e "bin/ \nboot/ \ndev/ \netc/ \nhome/ \nlib/ \nmedia/ \nmnt/ \nopt/ \nproc/ \nroot/ \nsbin/ \nsys/ \ntmp/ \nusr/ \nvar/" >> /.git/info/exclude

Attention! Dotfiles in your root directory still get tracked if you run:

  $ cd /
  $ git add .

h4. Add remote repo and first file

  $ git add /etc/conf.d/local.start
  $ git commit -m 'first commit'
  $ git remote add origin git@github.com:Inte/cobagi.git
  $ git push origin master

*Done!*

h4. Daily routine

From now on just add all files you wish to backup:

  $ git add etc/fstab
  $ git commit -m 'added filesystem table'
  $ git push

h3. FAQ

* How can I remove an accidently added file?
* How can I remove accidently committed changes?
* How can I revert an accidently pushed commit?
* Why don't you exclude /. directories (/.git/ for example)?
* Is it safe to run @git clean@?

fn1. Bad Idea! @git add etc/ssh/*@

fn2. Don't copy & paste! Use your account information. For example: @git@github.com:Inte/cobagi.git -> git@github.com:${YourUsername}/${YourRepo}.git@
